***********************
WEEK-3 QUIZ
***********************


--------------------------------------------------------------------------------------------------------------------------------------------------------
1.  Question. The C library function malloc()
    Ans. returns a pointer
--------------------------------------------------------------------------------------------------------------------------------------------------------
2.  Question.   The code
                    while(h != NULL) {
                    …
                    }
                Is typical for:

    Ans.  Processing a list
--------------------------------------------------------------------------------------------------------------------------------------------------------
3.  void concat(list* h1, list* h2)

    Question.   as described concatenates two lists. If list h1 has n elements and list h2 has m elements where m > n,  
                then concatenation takes approximately proportional to list lengths
    Ans. n
--------------------------------------------------------------------------------------------------------------------------------------------------------
4.  Question. A complete binary tree of depth 5 would have
    Ans. 32 leaf nodes
--------------------------------------------------------------------------------------------------------------------------------------------------------
5.  void postorder(BTREE root)
    {
        if (root != NULL) {
            postorder(root -> left);
            postorder(root -> right);
            printf(“%c “, root -> d);
        }
    }

    Ans. Is recursive
--------------------------------------------------------------------------------------------------------------------------------------------------------
6.  Question. The C library function calloc()
    Ans.  sets memory to 0
--------------------------------------------------------------------------------------------------------------------------------------------------------
7.  while(h != NULL) {
    …
    }

    Question. is not ideal when:
    Ans. h can never equal to NULL
--------------------------------------------------------------------------------------------------------------------------------------------------------
8.  Question. as described concatenates two lists. If list h1 has n elements and list h2 has m elements where m < n,  
            then concatenation takes approximately proportional to list lengths
    Ans. n
--------------------------------------------------------------------------------------------------------------------------------------------------------
9.  Question. A complete binary tree of depth 8 would have
    Ans. 256
--------------------------------------------------------------------------------------------------------------------------------------------------------
10. void postorder(BTREE root)
    {
        if (root != NULL) {
            postorder(root -> left);
            postorder(root -> right);
            printf(“%c “, root -> d);
        }
    }

    Ans. Will make no change to a given BTREE object
--------------------------------------------------------------------------------------------------------------------------------------------------------